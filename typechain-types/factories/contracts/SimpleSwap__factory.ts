/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleSwap,
  SimpleSwapInterface,
} from "../../contracts/SimpleSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_initialRate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "kdaAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "RateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "kdaAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "kdaBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "getReverseSwapQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "kdaAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_kdaAmount",
        type: "uint256",
      },
    ],
    name: "getSwapQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "swapTokensForKDA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSwapped",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newRate",
        type: "uint256",
      },
    ],
    name: "updateRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611d64380380611d6483398181016040528101906100329190610209565b61004e6100436100a460201b60201c565b6100ac60201b60201c565b6001808190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003819055505050610249565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101a082610175565b9050919050565b6101b081610195565b81146101bb57600080fd5b50565b6000815190506101cd816101a7565b92915050565b6000819050919050565b6101e6816101d3565b81146101f157600080fd5b50565b600081519050610203816101dd565b92915050565b600080604083850312156102205761021f610170565b5b600061022e858286016101be565b925050602061023f858286016101f4565b9150509250929050565b611b0c806102586000396000f3fe6080604052600436106100f65760003560e01c8063715018a61161008a578063d8501f4f11610059578063d8501f4f146102e3578063db2e21bc1461030e578063f2fde38b14610325578063fc0c546a1461034e576100fd565b8063715018a61461025a5780638119c065146102715780638da5cb5b1461027b578063cc69b11e146102a6576100fd565b806351c6590a116100c657806351c6590a146101ad57806352f057d5146101c9578063679aefce1461020657806369ea177114610231576100fd565b8062113e081461010257806315770f921461012e5780632c4e722e146101595780632eb4426c14610184576100fd565b366100fd57005b600080fd5b34801561010e57600080fd5b50610117610379565b60405161012592919061117b565b60405180910390f35b34801561013a57600080fd5b50610143610421565b60405161015091906111a4565b60405180910390f35b34801561016557600080fd5b5061016e610427565b60405161017b91906111a4565b60405180910390f35b34801561019057600080fd5b506101ab60048036038101906101a691906111f0565b61042d565b005b6101c760048036038101906101c291906111f0565b610708565b005b3480156101d557600080fd5b506101f060048036038101906101eb91906111f0565b61098b565b6040516101fd91906111a4565b60405180910390f35b34801561021257600080fd5b5061021b6109b5565b60405161022891906111a4565b60405180910390f35b34801561023d57600080fd5b50610258600480360381019061025391906111f0565b6109bf565b005b34801561026657600080fd5b5061026f610a55565b005b610279610a69565b005b34801561028757600080fd5b50610290610d13565b60405161029d919061125e565b60405180910390f35b3480156102b257600080fd5b506102cd60048036038101906102c891906111f0565b610d3c565b6040516102da91906111a4565b60405180910390f35b3480156102ef57600080fd5b506102f8610d66565b60405161030591906111a4565b60405180910390f35b34801561031a57600080fd5b50610323610d6c565b005b34801561033157600080fd5b5061034c600480360381019061034791906112a5565b610f17565b005b34801561035a57600080fd5b50610363610f9a565b6040516103709190611331565b60405180910390f35b60008047600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103d8919061125e565b602060405180830381865afa1580156103f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104199190611361565b915091509091565b60055481565b60035481565b610435610fc0565b60008111610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f906113eb565b60405180910390fd5b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104d4919061125e565b602060405180830381865afa1580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105159190611361565b1015610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d90611457565b60405180910390fd5b6000600354670de0b6b3a76400008361056f91906114a6565b6105799190611517565b9050804710156105be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b590611594565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161061d939291906115b4565b6020604051808303816000875af115801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190611623565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156106a7573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167fe3a277e9dc82afe4d40533f81d7299e0d9ca6d4ed93e2bbe5d94a93eaf0a5b5f82846003546040516106f493929190611650565b60405180910390a25061070561100f565b50565b610710610fc0565b60003411610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a906116d3565b60405180910390fd5b60008111610796576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078d9061173f565b60405180910390fd5b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016107f2919061125e565b602060405180830381865afa15801561080f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108339190611361565b1015610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086b90611457565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016108d3939291906115b4565b6020604051808303816000875af11580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109169190611623565b503460056000828254610929919061175f565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45348360405161097892919061117b565b60405180910390a261098861100f565b50565b6000670de0b6b3a7640000600354836109a491906114a6565b6109ae9190611517565b9050919050565b6000600354905090565b6109c7611018565b60008111610a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a01906117df565b60405180910390fd5b60006003549050816003819055507fb38780ddde1f073d91c150de2696f3f7085883648ba21cc5ef01029cb21d19168183604051610a4992919061117b565b60405180910390a15050565b610a5d611018565b610a676000611096565b565b610a71610fc0565b60003411610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aab9061184b565b60405180910390fd5b34471015610af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aee906118b7565b60405180910390fd5b6000670de0b6b3a764000060035434610b1091906114a6565b610b1a9190611517565b905080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b78919061125e565b602060405180830381865afa158015610b95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb99190611361565b1015610bfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf190611923565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c57929190611943565b6020604051808303816000875af1158015610c76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9a9190611623565b503460046000828254610cad919061175f565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe3a277e9dc82afe4d40533f81d7299e0d9ca6d4ed93e2bbe5d94a93eaf0a5b5f3483600354604051610d0093929190611650565b60405180910390a250610d1161100f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600354670de0b6b3a764000083610d5591906114a6565b610d5f9190611517565b9050919050565b60045481565b610d74611018565b610d7c610d13565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610dc1573d6000803e3d6000fd5b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e1f919061125e565b602060405180830381865afa158015610e3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e609190611361565b90506000811115610f1457600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610eb1610d13565b836040518363ffffffff1660e01b8152600401610ecf929190611943565b6020604051808303816000875af1158015610eee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f129190611623565b505b50565b610f1f611018565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f85906119de565b60405180910390fd5b610f9781611096565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260015403611005576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffc90611a4a565b60405180910390fd5b6002600181905550565b60018081905550565b61102061115a565b73ffffffffffffffffffffffffffffffffffffffff1661103e610d13565b73ffffffffffffffffffffffffffffffffffffffff1614611094576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108b90611ab6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61117581611162565b82525050565b6000604082019050611190600083018561116c565b61119d602083018461116c565b9392505050565b60006020820190506111b9600083018461116c565b92915050565b600080fd5b6111cd81611162565b81146111d857600080fd5b50565b6000813590506111ea816111c4565b92915050565b600060208284031215611206576112056111bf565b5b6000611214848285016111db565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112488261121d565b9050919050565b6112588161123d565b82525050565b6000602082019050611273600083018461124f565b92915050565b6112828161123d565b811461128d57600080fd5b50565b60008135905061129f81611279565b92915050565b6000602082840312156112bb576112ba6111bf565b5b60006112c984828501611290565b91505092915050565b6000819050919050565b60006112f76112f26112ed8461121d565b6112d2565b61121d565b9050919050565b6000611309826112dc565b9050919050565b600061131b826112fe565b9050919050565b61132b81611310565b82525050565b60006020820190506113466000830184611322565b92915050565b60008151905061135b816111c4565b92915050565b600060208284031215611377576113766111bf565b5b60006113858482850161134c565b91505092915050565b600082825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b60006113d5601d8361138e565b91506113e08261139f565b602082019050919050565b60006020820190508181036000830152611404816113c8565b9050919050565b7f496e73756666696369656e7420746f6b656e2062616c616e6365000000000000600082015250565b6000611441601a8361138e565b915061144c8261140b565b602082019050919050565b6000602082019050818103600083015261147081611434565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114b182611162565b91506114bc83611162565b92508282026114ca81611162565b915082820484148315176114e1576114e0611477565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061152282611162565b915061152d83611162565b92508261153d5761153c6114e8565b5b828204905092915050565b7f496e73756666696369656e74204b4441206c6971756964697479000000000000600082015250565b600061157e601a8361138e565b915061158982611548565b602082019050919050565b600060208201905081810360008301526115ad81611571565b9050919050565b60006060820190506115c9600083018661124f565b6115d6602083018561124f565b6115e3604083018461116c565b949350505050565b60008115159050919050565b611600816115eb565b811461160b57600080fd5b50565b60008151905061161d816115f7565b92915050565b600060208284031215611639576116386111bf565b5b60006116478482850161160e565b91505092915050565b6000606082019050611665600083018661116c565b611672602083018561116c565b61167f604083018461116c565b949350505050565b7f53656e64204b444120666f72206c697175696469747900000000000000000000600082015250565b60006116bd60168361138e565b91506116c882611687565b602082019050919050565b600060208201905081810360008301526116ec816116b0565b9050919050565b7f53656e6420746f6b656e7320666f72206c697175696469747900000000000000600082015250565b600061172960198361138e565b9150611734826116f3565b602082019050919050565b600060208201905081810360008301526117588161171c565b9050919050565b600061176a82611162565b915061177583611162565b925082820190508082111561178d5761178c611477565b5b92915050565b7f52617465206d7573742062652067726561746572207468616e20300000000000600082015250565b60006117c9601b8361138e565b91506117d482611793565b602082019050919050565b600060208201905081810360008301526117f8816117bc565b9050919050565b7f53656e64204b444120746f207377617000000000000000000000000000000000600082015250565b600061183560108361138e565b9150611840826117ff565b602082019050919050565b6000602082019050818103600083015261186481611828565b9050919050565b7f496e73756666696369656e7420636f6e74726163742062616c616e6365000000600082015250565b60006118a1601d8361138e565b91506118ac8261186b565b602082019050919050565b600060208201905081810360008301526118d081611894565b9050919050565b7f496e73756666696369656e7420746f6b656e206c697175696469747900000000600082015250565b600061190d601c8361138e565b9150611918826118d7565b602082019050919050565b6000602082019050818103600083015261193c81611900565b9050919050565b6000604082019050611958600083018561124f565b611965602083018461116c565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006119c860268361138e565b91506119d38261196c565b604082019050919050565b600060208201905081810360008301526119f7816119bb565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611a34601f8361138e565b9150611a3f826119fe565b602082019050919050565b60006020820190508181036000830152611a6381611a27565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611aa060208361138e565b9150611aab82611a6a565b602082019050919050565b60006020820190508181036000830152611acf81611a93565b905091905056fea264697066735822122039ed3da8b0d30342114aec892eeb3f1471c25343ec00afaf81d66531f30d176564736f6c634300081c0033";

type SimpleSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleSwap__factory extends ContractFactory {
  constructor(...args: SimpleSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    _initialRate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, _initialRate, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    _initialRate: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, _initialRate, overrides || {}) as Promise<
      SimpleSwap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleSwap__factory {
    return super.connect(runner) as SimpleSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleSwapInterface {
    return new Interface(_abi) as SimpleSwapInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleSwap {
    return new Contract(address, _abi, runner) as unknown as SimpleSwap;
  }
}
