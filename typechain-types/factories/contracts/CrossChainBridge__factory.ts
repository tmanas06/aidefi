/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CrossChainBridge,
  CrossChainBridgeInterface,
} from "../../contracts/CrossChainBridge";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "bridgeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "targetChainId",
        type: "uint256",
      },
    ],
    name: "BridgeCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "BridgeFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "bridgeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sourceChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "targetChainId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "BridgeInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bridgeContract",
        type: "address",
      },
    ],
    name: "ChainAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    name: "TokenSupported",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_bridgeContract",
        type: "address",
      },
    ],
    name: "addSupportedChain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bridges",
    outputs: [
      {
        internalType: "uint256",
        name: "bridgeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sourceChainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isProcessed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bridgeId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_txHash",
        type: "bytes32",
      },
    ],
    name: "completeBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "emergencyWithdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "getBridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bridgeId",
        type: "uint256",
      },
    ],
    name: "getBridgeInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "bridgeId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sourceChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetChainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isProcessed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "txHash",
            type: "bytes32",
          },
        ],
        internalType: "struct CrossChainBridge.BridgeTransaction",
        name: "bridge",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedChains",
    outputs: [
      {
        internalType: "uint256[]",
        name: "chains",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_targetChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "initiateBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "minBridgeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedTransactions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_supported",
        type: "bool",
      },
    ],
    name: "setSupportedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supportedChains",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "address",
        name: "bridgeContract",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "updateBridgeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newMinAmount",
        type: "uint256",
      },
    ],
    name: "updateMinBridgeAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610039565b6001805566038d7ea4c68000600755662386f26fc10000600855610089565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611936806100986000396000f3fe60806040526004361061012e5760003560e01c806382b12dd7116100ab578063c4bffe2b1161006f578063c4bffe2b146104f2578063cf9f123914610514578063db2e21bc14610534578063e798646614610549578063f066bca914610569578063f2fde38b1461058b57600080fd5b806382b12dd7146103905780638da5cb5b146103a6578063a3c44705146103ce578063ac2e4936146104ac578063c3c22475146104dc57600080fd5b80635a1c0366116100f25780635a1c0366146102e857806368c4ac2614610308578063715018a6146103485780637d1c03001461035d5780637e023b341461037057600080fd5b80631af032031461013a57806350c748431461015c57806351145aed14610185578063548d496f14610298578063559a13ed146102c857600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061015a6101553660046113c3565b6105ab565b005b34801561016857600080fd5b5061017260065481565b6040519081526020015b60405180910390f35b34801561019157600080fd5b5061028b6101a03660046113e5565b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810191909152506000908152600260208181526040928390208351610140810185528154815260018201546001600160a01b0390811693820193909352928101549383019390935260038301546060830152600483015460808301526005830154811660a0830152600683015490811660c0830152600160a01b900460ff16151560e0820152600782015461010082015260089091015461012082015290565b60405161017c91906113fe565b3480156102a457600080fd5b506102b86102b33660046113e5565b6106be565b60405161017c94939291906114ee565b3480156102d457600080fd5b5061015a6102e3366004611528565b61077d565b3480156102f457600080fd5b5061015a6103033660046113e5565b610985565b34801561031457600080fd5b506103386103233660046113c3565b60046020526000908152604090205460ff1681565b604051901515815260200161017c565b34801561035457600080fd5b5061015a6109d2565b61015a61036b36600461154a565b6109e6565b34801561037c57600080fd5b5061015a61038b3660046115a6565b610ef4565b34801561039c57600080fd5b5061017260075481565b3480156103b257600080fd5b506000546040516001600160a01b03909116815260200161017c565b3480156103da57600080fd5b5061044f6103e93660046113e5565b600260208190526000918252604090912080546001820154928201546003830154600484015460058501546006860154600787015460089097015495976001600160a01b03908116979596949593949281169390821692600160a01b90920460ff16918a565b604080519a8b526001600160a01b03998a1660208c01528a01979097526060890195909552608088019390935290851660a087015290931660c085015291151560e08401526101008301919091526101208201526101400161017c565b3480156104b857600080fd5b506103386104c73660046113e5565b60056020526000908152604090205460ff1681565b3480156104e857600080fd5b5061017260085481565b3480156104fe57600080fd5b5061050761107b565b60405161017c9190611671565b34801561052057600080fd5b5061015a61052f3660046113e5565b611175565b34801561054057600080fd5b5061015a611182565b34801561055557600080fd5b5061015a6105643660046116c3565b6111c7565b34801561057557600080fd5b506101726105843660046113e5565b5060075490565b34801561059757600080fd5b5061015a6105a63660046113c3565b61122e565b6105b36112a4565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e91906116fa565b905080156106ba57816001600160a01b031663a9059cbb6106476000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b89190611713565b505b5050565b600360205260009081526040902080546001820180549192916106e090611730565b80601f016020809104026020016040519081016040528092919081815260200182805461070c90611730565b80156107595780601f1061072e57610100808354040283529160200191610759565b820191906000526020600020905b81548152906001019060200180831161073c57829003601f168201915b5050506002909301549192505060ff8116906001600160a01b036101009091041684565b6107856112a4565b60008281526002602052604090206006810154600160a01b900460ff16156107f45760405162461bcd60e51b815260206004820152601860248201527f42726964676520616c72656164792070726f636573736564000000000000000060448201526064015b60405180910390fd5b600781015461080590610e10611780565b4210156108475760405162461bcd60e51b815260206004820152601060248201526f427269646765206e6f7420726561647960801b60448201526064016107eb565b60068101805460ff60a01b1916600160a01b1790556008810182905560018101546001600160a01b0316156108ff5760018101546005820154600283015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af11580156108d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f99190611713565b50610941565b600581015460028201546040516001600160a01b039092169181156108fc0291906000818181858888f1935050505015801561093f573d6000803e3d6000fd5b505b81837f9fbc76e955ebdc6b9467318cf4719d70d51dfa2e9908d34b8b75353f15f31301836004015460405161097891815260200190565b60405180910390a3505050565b61098d6112a4565b600780549082905560408051828152602081018490527f3e7af433b010df0902f945628a14ef63c63e1e5e8306127bde522445a470588f910160405180910390a15050565b6109da6112a4565b6109e460006112fe565b565b6109ee61134e565b600854831015610a375760405162461bcd60e51b8152602060048201526014602482015273416d6f756e742062656c6f77206d696e696d756d60601b60448201526064016107eb565b6001600160a01b038116610a815760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b60448201526064016107eb565b60008281526003602052604090206002015460ff16610ad85760405162461bcd60e51b815260206004820152601360248201527210da185a5b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064016107eb565b6001600160a01b03841615610cb9576001600160a01b03841660009081526004602052604090205460ff16610b455760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064016107eb565b6040516370a0823160e01b815233600482015283906001600160a01b038616906370a0823190602401602060405180830381865afa158015610b8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baf91906116fa565b1015610bfd5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e636500000000000060448201526064016107eb565b604051636eb1769f60e11b815233600482015230602482015283906001600160a01b0386169063dd62ed3e90604401602060405180830381865afa158015610c49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6d91906116fa565b1015610cb45760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064016107eb565b610d0d565b600754610cc69084611780565b341015610d0d5760405162461bcd60e51b8152602060048201526015602482015274125b9cdd59999a58da595b9d0812d110481cd95b9d605a1b60448201526064016107eb565b60068054906000610d1d83611799565b90915550506040805161014081018252600680548083526001600160a01b0380891660208086018281528688018b81524660608901908152608089018c81528b871660a08b019081523360c08c01908152600060e08d01818152426101008f019081526101208f018381529c83526002998a90529e9091209c518d55955160018d018054918b166001600160a01b03199283161790559451968c0196909655915160038b01555160048a015551600589018054918716919092161790559051948601805491511515600160a01b026001600160a81b0319909216959093169490941793909317905592516007830155915160089091015515610e92576040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610e6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e909190611713565b505b600654604080518581524660208201529081018490526001600160a01b0380841692908716917f6ff0e4bc3cc1b3ed6f007f02b359f035d1c2a162d4478ba6825a3e45a395b0ae9060600160405180910390a4610eee60018055565b50505050565b610efc6112a4565b468303610f4b5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f74206164642063757272656e7420636861696e000000000000000060448201526064016107eb565b6001600160a01b038116610fa15760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642062726964676520636f6e747261637400000000000000000060448201526064016107eb565b60408051608081018252848152602080820185815260018385018190526001600160a01b038616606085015260008881526003909352939091208251815590519192909190820190610ff39082611800565b50604082810151600290920180546060909401516001600160a01b031661010002610100600160a81b0319931515939093166001600160a81b031990941693909317919091179091555183907fd561e43d9bdfcde1ceb4f2cd9972b8f1667876d7df10a2b775f181b66ae5b39f9061106e90859085906118c0565b60405180910390a2505050565b60606000805b60648110156110c45760008181526003602052604090206002015460ff16156110b257816110ae81611799565b9250505b806110bc81611799565b915050611081565b508067ffffffffffffffff8111156110de576110de611590565b604051908082528060200260200182016040528015611107578160200160208202803683370190505b5091506000805b606481101561116f5760008181526003602052604090206002015460ff161561115d5780848381518110611144576111446118ea565b60209081029190910101528161115981611799565b9250505b8061116781611799565b91505061110e565b50505090565b61117d6112a4565b600855565b61118a6112a4565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f193505050501580156111c4573d6000803e3d6000fd5b50565b6111cf6112a4565b6001600160a01b038216600081815260046020908152604091829020805460ff191685151590811790915591519182527fd86c88b4a367d9b81a6e00c9d3f7d01657bffef358fa8968c91c045ae99f0d52910160405180910390a25050565b6112366112a4565b6001600160a01b03811661129b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107eb565b6111c4816112fe565b6000546001600160a01b031633146109e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107eb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6002600154036113a05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107eb565b6002600155565b80356001600160a01b03811681146113be57600080fd5b919050565b6000602082840312156113d557600080fd5b6113de826113a7565b9392505050565b6000602082840312156113f757600080fd5b5035919050565b81518152602080830151610140830191611422908401826001600160a01b03169052565b5060408301516040830152606083015160608301526080830151608083015260a083015161145b60a08401826001600160a01b03169052565b5060c083015161147660c08401826001600160a01b03169052565b5060e083015161148a60e084018215159052565b50610100838101519083015261012092830151929091019190915290565b6000815180845260005b818110156114ce576020818501810151868301820152016114b2565b506000602082860101526020601f19601f83011685010191505092915050565b84815260806020820152600061150760808301866114a8565b9315156040830152506001600160a01b039190911660609091015292915050565b6000806040838503121561153b57600080fd5b50508035926020909101359150565b6000806000806080858703121561156057600080fd5b611569856113a7565b93506020850135925060408501359150611585606086016113a7565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156115bb57600080fd5b83359250602084013567ffffffffffffffff808211156115da57600080fd5b818601915086601f8301126115ee57600080fd5b81358181111561160057611600611590565b604051601f8201601f19908116603f0116810190838211818310171561162857611628611590565b8160405282815289602084870101111561164157600080fd5b826020860160208301376000602084830101528096505050505050611668604085016113a7565b90509250925092565b6020808252825182820181905260009190848201906040850190845b818110156116a95783518352928401929184019160010161168d565b50909695505050505050565b80151581146111c457600080fd5b600080604083850312156116d657600080fd5b6116df836113a7565b915060208301356116ef816116b5565b809150509250929050565b60006020828403121561170c57600080fd5b5051919050565b60006020828403121561172557600080fd5b81516113de816116b5565b600181811c9082168061174457607f821691505b60208210810361176457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156117935761179361176a565b92915050565b6000600182016117ab576117ab61176a565b5060010190565b601f8211156106b857600081815260208120601f850160051c810160208610156117d95750805b601f850160051c820191505b818110156117f8578281556001016117e5565b505050505050565b815167ffffffffffffffff81111561181a5761181a611590565b61182e816118288454611730565b846117b2565b602080601f831160018114611863576000841561184b5750858301515b600019600386901b1c1916600185901b1785556117f8565b600085815260208120601f198616915b8281101561189257888601518255948401946001909101908401611873565b50858210156118b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006118d360408301856114a8565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220bb968f3cbb264a6255f0faec3df2acfb415cd616c0209c82c1e979bc007d6bac64736f6c63430008130033";

type CrossChainBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainBridge__factory extends ContractFactory {
  constructor(...args: CrossChainBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CrossChainBridge & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CrossChainBridge__factory {
    return super.connect(runner) as CrossChainBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainBridgeInterface {
    return new Interface(_abi) as CrossChainBridgeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CrossChainBridge {
    return new Contract(address, _abi, runner) as unknown as CrossChainBridge;
  }
}
